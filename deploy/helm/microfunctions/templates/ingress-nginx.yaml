#   Copyright 2020 The KNIX Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

{{- if (.Values.ingress.httpsCert)}}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-ingress-tls
data:
  tls.crt: {{ .Values.ingress.httpsCert }}
  tls.key: {{ .Values.ingress.httpsKey }}
---
{{- end }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Namespace }}
spec:
{{- if (.Values.ingress.httpsCert) }}
  tls:
    - hosts:
      - {{ .Values.ingress.host }}
      secretName: {{ .Release.Name }}-ingress-tls
{{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /storage
        pathType: Prefix
        backend:
          serviceName: store-{{ .Release.Name }}
          servicePort: 80
      - path: /
        pathType: Prefix
        backend:
          serviceName: nx-{{ .Release.Name }}
          servicePort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-wf-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/upstream-vhost: wf-{{ .Release.Name }}-management.{{ .Release.Namespace }}.svc.cluster.local
spec:
{{- if (.Values.ingress.httpsCert) }}
  tls:
  - hosts:
      - {{ .Values.ingress.host }}
    secretName: {{ .Release.Name }}-ingress-tls
{{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /management(/|$)(.*)
        pathType: Prefix
        backend:
          serviceName: wf-{{ .Release.Name }}-management
          servicePort: 80
---
{{- if (.Values.ingress.httpsCert)}}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  namespace: istio-system
  name: {{ .Release.Name }}-ingress-tls
data:
  tls.crt: {{ .Values.ingress.httpsCert }}
  tls.key: {{ .Values.ingress.httpsKey }}
---
{{- end }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: knix-services
  namespace: istio-system
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: $2.{{ .Release.Namespace }}.svc.cluster.local
spec:
{{- if (.Values.ingress.httpsCert) }}
  tls:
  - hosts:
      - {{ printf "%s.%s" "*" .Values.ingress.host | quote }}
    secretName: {{ .Release.Name }}-ingress-tls
{{- end }}
  rules:
  - host: {{ printf "%s.%s" "*" .Values.ingress.host | quote }}
    http:
      paths:
      - path: /workflow(/|$)(.*)
        pathType: Prefix
        backend:
          serviceName: istio-ingressgateway
          servicePort: 80
